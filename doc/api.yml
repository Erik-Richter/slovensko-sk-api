openapi: 3.0.0

info:
  version: 0.0.1
  title: PODAAS
  contact:
    name: Slovensko.Digital
    url: slovensko.digital
    email: kontakt@slovensko.digital

servers:
- description: Produkčný server s ÚPVS PROD prostredím.
  url: https://podaas.ekosystem.slovensko.digital

- description: Produkčný server s ÚPVS FIX prostredím.
  url: https://podaas.ekosystem.staging.slovensko.digital

paths:
  /login:
    get:
      tags: [Authentication]
      description: Prihlásenie do ÚPVS portálu. Po úspešnom prihlásení nasleduje presmerovanie späť na callback URL tretej strany. Potrebný OBO token sa nachádza v `token` parametri tejto callback URL.
      parameters:
      - name: callback
        in: query
        required: true
        description: Prihlasovacia callback URL.
        schema:
          type: string
          format: URL
      responses:
        302:
          description: Presmerovanie na prihlásenie do ÚPVS portálu.
        401:
          $ref: '#/components/responses/unauthorized'
        500:
          $ref: '#/components/responses/internalServerError'
      callbacks:
        login:
          '{$request.query.callback}?token=<obo-token>':
            get:
              parameters:
              - name: token
                in: query
                required: true
                description: OBO token v JWT formáte.
                schema:
                  type: string
                  format: JWT
              responses:
                200:
                  description: Server tretej strany vráti tento HTTP kód ak akceptuje callback.

  /logout:
    get:
      tags: [Authentication]
      description: Odhlásenie z ÚPVS portálu. Po úspešnom odhlásení nasleduje presmerovanie späť na callback URL tretej strany.
      parameters:
      - name: Authorization
        in: header
        required: true
        description: 'API token vo formáte JWT, príklad parametra `Authorization: Bearer <api-token>`'
        schema:
          type: string
          format: JWT
      - name: token
        in: query
        required: false
        deprecated: true
        description: 'API token vo formáte JWT, príklad parametra `?token=<api-token>`'
        schema:
          type: string
          format: JWT
      - name: callback
        in: query
        required: true
        description: Odhlasovacia callback URL.
        schema:
          type: string
          format: URL
      responses:
        302:
          description: Presmerovanie na callback URL tretej strany.
        400:
          $ref: '#/components/responses/badRequest'
        401:
          $ref: '#/components/responses/unauthorized'
        500:
          $ref: '#/components/responses/internalServerError'
      callbacks:
        login:
          '{$request.query.callback}':
            get:
              responses:
                200:
                  description: Server tretej strany vráti tento HTTP kód ak akceptuje callback.
      security:
      - 'API + OBO token': []

  /api/eform/validate:
    post:
      tags: [Operations]
      description: Validuje eForm dáta.
      parameters:
      - name: Authorization
        in: header
        required: true
        description: 'API token vo formáte JWT, príklad parametra `Authorization: Bearer <api-token>`'
        schema:
          type: string
          format: JWT
      - name: token
        in: query
        required: false
        deprecated: true
        description: 'API token vo formáte JWT, príklad parametra `?token=<api-token>`'
        schema:
          type: string
          format: JWT
      - name: identifier
        in: query
        required: true
        description: 'Identifikátor formuláru, napríklad `App.GeneralAgenda`'
        schema:
          type: string
      - name: version
        in: query
        required: true
        description: 'Verzia formuláru, napríklad `1.9`'
        schema:
          type: string
      - name: data
        in: query
        required: true
        description: 'Dáta formuláru, napríklad `<GeneralAgenda>...</GeneralAgenda>`'
        schema:
          type: string
          format: XML
      responses:
        200:
          description: eForm dáta validované.
          content:
            application/json:
              schema:
                type: object
                properties:
                  valid:
                    type: boolean
                  errors:
                    type: array
                    items:
                      type: string
                required:
                - valid
                example:
                  valid: true
        400:
          $ref: '#/components/responses/badRequest'
        401:
          $ref: '#/components/responses/unauthorized'
        408:
          $ref: '#/components/responses/requestTimeout'
        413:
          $ref: '#/components/responses/payloadTooLarge'
        429:
          $ref: '#/components/responses/tooManyRequests'
        500:
          $ref: '#/components/responses/internalServerError'
      security:
      - 'API token': []

  /api/sktalk/receive:
    post:
      tags: [Operations]
      description: Prijíme SKTalk správu.
      parameters:
      - name: Authorization
        in: header
        required: true
        description: 'API token vo formáte JWT, príklad parametra `Authorization: Bearer <api-token>`'
        schema:
          type: string
          format: JWT
      - name: token
        in: query
        required: false
        deprecated: true
        description: 'API token vo formáte JWT, príklad parametra `?token=<api-token>`'
        schema:
          type: string
          format: JWT
      - name: sktalk_message
        in: query
        required: true
        description: 'SKTalk správa vo formáte XML, napríklad `<SKTalkMessage>...</SKTalkMessage>`'
        schema:
          type: string
          format: XML
      responses:
        200:
          description: SKTalk správa prijatá.
          content:
            application/json:
              schema:
                type: object
                properties:
                  receive_result:
                    type: integer
                required:
                - receive_result
                example:
                  receive_result: 0
        400:
          $ref: '#/components/responses/badRequest'
        401:
          $ref: '#/components/responses/unauthorized'
        408:
          $ref: '#/components/responses/requestTimeout'
        413:
          $ref: '#/components/responses/payloadTooLarge'
        429:
          $ref: '#/components/responses/tooManyRequests'
        500:
          $ref: '#/components/responses/internalServerError'
      security:
      - 'API + OBO token': []

  /api/sktalk/receive_and_save_to_outbox:
    post:
      tags: [Operations]
      description: Prijíme SKTalk správu a uloží ju medzi odoslané.
      parameters:
      - name: Authorization
        in: header
        required: true
        description: 'API token vo formáte JWT, príklad parametra `Authorization: Bearer <api-token>`'
        schema:
          type: string
          format: JWT
      - name: token
        in: query
        required: false
        deprecated: true
        description: 'API token vo formáte JWT, príklad parametra `?token=<api-token>`'
        schema:
          type: string
          format: JWT
      - name: sktalk_message
        in: query
        required: true
        description: 'SKTalk správa vo formáte XML, napríklad `<SKTalkMessage>...</SKTalkMessage>`'
        schema:
          type: string
          format: XML
      responses:
        200:
          description: SKTalk správa prijatá a uložen á medzi odoslané.
          content:
            application/json:
              schema:
                type: object
                properties:
                  receive_result:
                    type: integer
                  save_to_outbox_result:
                    type: integer
                required:
                - receive_result
                - save_to_outbox_result
                example:
                  receive_result: 0
                  save_to_outbox_result: 0
        400:
          $ref: '#/components/responses/badRequest'
        401:
          $ref: '#/components/responses/unauthorized'
        408:
          $ref: '#/components/responses/requestTimeout'
        413:
          $ref: '#/components/responses/payloadTooLarge'
        429:
          $ref: '#/components/responses/tooManyRequests'
        500:
          $ref: '#/components/responses/internalServerError'
      security:
      - 'API + OBO token': []

components:
  responses:
    badRequest:
      description: Parametre chýbajú alebo sú nesprávne.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
            required:
            - message
            example:
              message: No credentials

    unauthorized:
      description: Autentifikácia zlyhala.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
            required:
            - message
            example:
              message: Bad credentials
      headers:
        WWW-Authenticate:
          schema:
            type: string
            example: Token realm="PODAAS"

    requestTimeout:
      description: Operácia vypršala.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
            required:
            - message
            example:
              message: Operation timeout exceeded

    payloadTooLarge:
      description: Príliš veľký objem dát v požiadavke na server.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
            required:
            - message
            example:
              message: Payload size limit exceeded

    tooManyRequests:
      description: Príliš veľa požiadaviek na server v danom čase.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
            required:
            - message
            example:
              message: Request rate limit exceeded

    internalServerError:
      description: Neznáma chyba.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
            required:
            - message
            example:
              message: Unknown error

  securitySchemes:
    'API token':
      description: |
        Požaduje API token vytvorený treťou stranou, ktorý:

        - je zakodovaný algoritmom RS256,
        - je podpísaný privátnym kľúčom tretej strany,
        - má nastavený `exp` atribút na max. 60 minút,
        - má nastavený `jti` atribút na identifikátor, ktorý je unikátny počas 60 minút.

        Príklad hlavičky:

              {
                "alg": "HS256",
              }

        Príklad atribútov:

              {
                "exp": 1543437976,
                "jti": "4dee8618-abbe-4dc3-83ba-e984d1396f9f",
              }

        API token musí byť prítomný buď v `Authorization` hlavičke alebo v `token` parametri požiadavky.
      type: http
      scheme: bearer
      bearerFormat: JWT

    'API + OBO token':
      description: |
        Požaduje API token vytvorený treťou stranou, ktorý:

        - je zakodovaný algoritmom RS256,
        - je podpísaný privátnym kľúčom tretej strany,
        - má nastavenú `cty` hlavičku na hodnotu `JWT`,
        - má nastavený `exp` atribút na `exp` atribút OBO tokenu,
        - má nastavený `jti` atribút na identifikátor, ktorý je unikátny počas 60 minút,
        - má nastavený `obo` atribút na hodnotu OBO tokenu, ktorý je získaný po úspešnom prihlásení.

        Príklad hlavičky:

              {
                "alg": "HS256",
                "cty": "JWT"
              }

        Príklad atribútov:

              {
                "exp": 1543437976,
                "jti": "4dee8618-abbe-4dc3-83ba-e984d1396f9f",
                "obo": "eyJhbGciOiJIUzI1NiJ9..."
              }

        API token musí byť prítomný buď v `Authorization` hlavičke alebo v `token` parametri požiadavky.
      type: http
      scheme: bearer
      bearerFormat: JWT
