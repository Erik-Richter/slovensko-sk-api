openapi: 3.0.0

info:
  title: slovensko.sk API
  version: 1.0.0

  description: |
    slovensko.sk API je proxy API komponent vystavujúci cez REST API služby www.slovensko.sk (Ústredný portál verejnej správy - ÚPVS), pomocou ktorých je možné:

    - uskutočniť prihlásenie pomocou ÚPVS (pomocou elektronického občianskeho preukazu) a získať údaje o prihlásenom subjekte,
    - podávať podania v mene subjektu, ktorý sa prihlásil cez ÚPVS alebo pomocou technického účtu,
    - validovať či je určitá správa vo formáte SKTalk validná voči aktuálnej definícii formuláru (podporná funkcia).

  contact:
    name: Slovensko.Digital
    url: https://slovensko.digital
    email: ekosystem@slovensko.digital

  license:
    name: European Union Public License 1.2
    url: https://opensource.org/licenses/EUPL-1.2

servers:
- description: Server v ÚPVS PROD prostredí
  url: https://slovensko-sk-api.ekosystem.slovensko.digital

- description: Server v ÚPVS DEV prostredí
  url: https://slovensko-sk-api.ekosystem.staging.slovensko.digital

paths:
  /login:
    get:
      tags: [Prihlasovanie pomocou eID]
      description: Prihlásenie pomocou slovensko.sk (ÚPVS). Po úspešnom prihlásení nasleduje presmerovanie späť na callback URL tretej strany. V parametri `token` bude zaslaný OBO (On-Behalf-Of) token využiteľný na získanie údajov o prihlásenom subjekte alebo volanie ďaľších rozhraní v mene prihláseného subjektu.
      parameters:
      - name: callback
        in: query
        required: true
        description: Callback URL, na ktorú bude používateľ presmerovaný po úspešnom prihlásení. Callback URL musí byť prefixom jednej zo zaregistrovaných adries na úrovni API komponentu, musí mať rovnakú doménu a schému.
        schema:
          type: string
          format: URL
      responses:
        302:
          description: Presmerovanie na prihlasovaciu stránku ÚPVS a následne na callback URL tretej strany.
      callbacks:
        login:
          '{$request.query.callback}':
            get:
              parameters:
              - name: token
                in: query
                required: true
                description: |
                  OBO token v JWT formáte, ktorého payload vyzerá nasledovne:

                      {
                        "sub": "rc://sk/8311577984_tisici_janko",
                        "exp": 1545147549,
                        "nbf": 1545146349,
                        "iat": 1545146349,
                        "jti": "ad8e5d2a-85ff-46b9-a13f-ac860db9acee",
                        "name": "Janko Tisíci",
                        "scopes": [
                          "sktalk/receive",
                          "sktalk/receive_and_save_to_outbox"
                        ]
                      }
                schema:
                  type: string
                  format: JWT
              responses:
                200:
                  description: Úspešné prihlásenie.

  /logout:
    get:
      tags: [Prihlasovanie pomocou eID]
      description: Odhlásenie pomocou slovensko.sk (ÚPVS). Po úspešnom odhlásení nasleduje presmerovanie späť na callback URL tretej strany.
      parameters:
      - name: callback
        in: query
        required: true
        description: Callback URL, na ktorú bude používateľ presmerovaný po úspešnom odhlásení. Callback URL musí byť prefixom jednej zo zaregistrovaných adries na úrovni API komponentu, musí mať rovnakú doménu a schému.
        schema:
          type: string
          format: URL
      responses:
        302:
          description: Presmerovanie na callback URL tretej strany.
      callbacks:
        logout:
          '{$request.query.callback}':
            get:
              responses:
                200:
                  description: Úspešné odhlásenie.
      security:
      - 'API + OBO Token': []

  /api/sktalk/receive_and_save_to_outbox:
    post:
      tags: [Zasielanie podaní]
      description: Odošle SKTalk správu a uloží ju medzi odoslané správy v schránke.
      parameters:
      - name: message
        in: query
        required: true
        description: 'SKTalk správa vo formáte XML, napríklad `<SKTalkMessage>...</SKTalkMessage>`'
        schema:
          type: string
          format: XML
      responses:
        200:
          description: SKTalk správa bola odoslaná a uložená medzi odoslané správy v schránke.
          content:
            application/json:
              schema:
                type: object
                properties:
                  receive_result:
                    type: integer
                  save_to_outbox_result:
                    type: integer
                required:
                - receive_result
                - save_to_outbox_result
                example:
                  receive_result: 0
                  save_to_outbox_result: 0
      security:
      - 'API Token': []
      - 'API + OBO Token': []

  /api/sktalk/receive:
    post:
      tags: [Zasielanie podaní]
      description: Odošle SKTalk správu.
      parameters:
      - name: message
        in: query
        required: true
        description: 'SKTalk správa vo formáte XML, napríklad `<SKTalkMessage>...</SKTalkMessage>`'
        schema:
          type: string
          format: XML
      responses:
        200:
          description: SKTalk správa bola odoslaná.
          content:
            application/json:
              schema:
                type: object
                properties:
                  receive_result:
                    type: integer
                required:
                - receive_result
                example:
                  receive_result: 0
      security:
      - 'API Token': []
      - 'API + OBO Token': []

  /api/eform/validate:
    post:
      tags: [Zasielanie podaní]
      description: Zvaliduje eForm dáta voči definícii formuláru.
      parameters:
      - name: identifier
        in: query
        required: true
        description: 'Identifikátor formuláru, napríklad `App.GeneralAgenda`'
        schema:
          type: string
      - name: version
        in: query
        required: true
        description: 'Verzia formuláru, napríklad `1.9`'
        schema:
          type: string
      - name: data
        in: query
        required: true
        description: 'Dáta formuláru, napríklad `<GeneralAgenda>...</GeneralAgenda>`'
        schema:
          type: string
          format: XML
      responses:
        200:
          description: eForm dáta boli úspešne validované voči definícii formuláru.
          content:
            application/json:
              schema:
                type: object
                properties:
                  valid:
                    type: boolean
                  errors:
                    type: array
                    items:
                      type: string
                required:
                - valid
                example:
                  valid: true
      security:
      - 'API Token': []

  /api/eform/status:
    get:
      tags: [Zasielanie podaní]
      description: Vráti eForm status formuláru.
      parameters:
      - name: identifier
        in: query
        required: true
        description: 'Identifikátor formuláru, napríklad `App.GeneralAgenda`'
        schema:
          type: string
      - name: version
        in: query
        required: true
        description: 'Verzia formuláru, napríklad `1.9`'
        schema:
          type: string
      responses:
        200:
          description: eForm status formuláru bol vrátený.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                required:
                - status
                example:
                  status: Publikovaný
      security:
      - 'API Token': []

  /api/upvs/user/info.saml:
    get:
      tags: [Informácie o prihlásenom používateľovi]
      description: Vráti ÚPVS SAML assertion v pôvodnom formáte.
      responses:
        200:
          description: ÚPVS SAML assertion v pôvodnom formáte bola vrátená.
          content:
            application/samlassertion+xml:
              schema:
                type: string
                example:
                  <saml:Assertion>...</saml:Assertion>
      security:
      - 'API + OBO Token': []

components:
  responses:
    badRequest:
      description: Parametre chýbajú alebo sú nesprávne.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
            required:
            - message
            example:
              message: No credentials

    unauthorized:
      description: Autentifikácia zlyhala.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
            required:
            - message
            example:
              message: Bad credentials
      headers:
        WWW-Authenticate:
          schema:
            type: string
            example: Token realm="API"

    requestTimeout:
      description: Operácia vypršala.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
            required:
            - message
            example:
              message: Operation timeout exceeded

    payloadTooLarge:
      description: Príliš veľký objem dát v požiadavke na server.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
            required:
            - message
            example:
              message: Payload size limit exceeded

    tooManyRequests:
      description: Príliš veľa požiadaviek na server v danom čase.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
            required:
            - message
            example:
              message: Request rate limit exceeded

    internalServerError:
      description: Neznáma chyba.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
            required:
            - message
            example:
              message: Unknown error

  securitySchemes:
    'API Token':
      description: |
        Požaduje API token vytvorený treťou stranou, ktorý:

        - je zakodovaný algoritmom RS256,
        - je podpísaný privátnym kľúčom tretej strany,
        - má nastavený `exp` claim na max. 120 minút,
        - má nastavený `jti` claim na identifikátor, ktorý je unikátny počas 120 minút.

        Príklad `header` segmentu:

              {
                "alg": "RS256",
              }

        Príklad `payload` segmentu:

              {
                "exp": 1543437976,
                "jti": "4dee8618-abbe-4dc3-83ba-e984d1396f9f",
              }

        API token musí byť prítomný buď:

        - v hlavičke požiadavky ako `Authorization: Bearer <api-token>`,
        - alebo v URL parametri požiadavky ako `?token=<api-token>`.

        Poznámky:

        - hodnota `jti` sa kontroluje podľa regulárneho výrazu `/^[0-9a-z-_]{1,256}$/`,
        - rovnaké `jti` sa nesmie použiť v viac ako jedenkrát počas 120 minút.
      type: http
      scheme: bearer
      bearerFormat: JWT

    'API + OBO Token':
      description: |
        Požaduje API token vytvorený treťou stranou, ktorý:

        - je zakodovaný algoritmom RS256,
        - je podpísaný privátnym kľúčom tretej strany,
        - má nastavenú `cty` header na hodnotu `JWT`,
        - má nastavený `exp` claim na `exp` atribút OBO tokenu,
        - má nastavený `jti` claim na identifikátor, ktorý je unikátny počas 120 minút,
        - má nastavený `obo` claim na hodnotu OBO tokenu, ktorý je získaný po úspešnom prihlásení.

        Príklad `header` segmentu:

              {
                "alg": "RS256",
                "cty": "JWT"
              }

        Príklad `payload` segmentu:

              {
                "exp": 1543437976,
                "jti": "4dee8618-abbe-4dc3-83ba-e984d1396f9f",
                "obo": "eyJhbGciOiJIUzI1NiJ9..."
              }

        API token musí byť prítomný buď:

        - v hlavičke požiadavky ako `Authorization: Bearer <api-token>`,
        - alebo v URL parametri požiadavky ako `?token=<api-token>`.

        Poznámky:

        - hodnota `jti` sa kontroluje podľa regulárneho výrazu `/^[0-9a-z-_]{1,256}$/`,
        - rovnaké `jti` sa nesmie použiť viac ako jedenkrát počas 120 minút.
      type: http
      scheme: bearer
      bearerFormat: JWT
